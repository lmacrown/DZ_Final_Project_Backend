<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
           "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douzone.dao.RegistDAO">
<!--사업소득자 등록-->
   <!--코드 클릭-->
   <select id="get_count" resultType="string">
      SELECT code_count
      FROM generate_series(#{code_count}, 999999) AS code_count
      WHERE NOT EXISTS (
         SELECT 1
         FROM earner
         WHERE earner_code = lpad(code_count::text, 6, '0')
         AND worker_id     = #{worker_id}
      )
      LIMIT 1;
   </select>
   
   <!--소득자 존재확인-->
   <select id="check_code" resultType="int">
      SELECT count(*) as count<!--cnt->count--> 
      FROM earner 
      WHERE earner_code = #{custom_code} 
      AND worker_id     = #{worker_id}
   </select>
   
   <!--업종코드-->
   <select id="list_divcode" resultType="java.util.Map">
      SELECT
          div_code
         ,div_name
         ,div_type
      FROM codes
   	  <if test="search_value != null and search_value != ''">
      	WHERE div_code ILIKE concat('%', #{search_value}, '%')
		OR div_name ILIKE concat('%', #{search_value}, '%')
		OR div_type ILIKE concat('%', #{search_value}, '%')
	  </if>
   </select>
   
   <select id="list_occupation" resultType="java.util.Map">
      SELECT *
      FROM occupation
      WHERE occupation_type = #{earner_type}
      <if test="search_value != null and search_value != ''">
      	AND (
            occupation_code ILIKE concat('%', #{search_value}, '%')
            OR occupation_name ILIKE concat('%', #{search_value}, '%')
        )
	  </if>
   </select>
   
   <select id="get_occupation" resultType="java.util.Map">
      SELECT *
      FROM occupation
      WHERE occupation_code = #{occupation_code}
      AND occupation_type = #{earner_type}
   </select>
   
   <!--소득자 정보 출력-->
   <select id="earner_list" resultType="java.util.Map">
      SELECT
          earner_code
         ,earner_name
         ,personal_no
         ,is_native
         ,div_code
         ,div_name
         ,div_type
         ,to_char(div_modified,'YYYY-MM-DD HH24:MI:SS') 
	      	   as div_modified
	     ,old_div_code
         ,old_div_name
	      	   
      FROM earner
      WHERE worker_id = #{worker_id}
   </select>
   
   <!--소득자 등록 정보 출력-->
   <select id="get_earner" resultType="com.douzone.entity.EarnerVO">
      SELECT *
      FROM earner
      WHERE earner_code = #{earner_code}
      AND   worker_id   = #{worker_id}
   </select>
    <select id="get_bw_key" resultType="String">
      SELECT bw_key
      FROM earner
      WHERE earner_code = #{earner_code}
      AND   worker_id   = #{worker_id}
   </select>
   
   <!--소득자 정보 입력-->
   <insert id="earner_insert" useGeneratedKeys="true" keyProperty="earner_code">
      INSERT INTO earner (
          earner_code
         ,worker_id
         ,earner_name
         ,div_code
         ,div_name
         ,div_type
         ,personal_no
         ,is_native
         ,create_date
         ,bw_key
      ) VALUES (
          #{earner_code}
         ,#{worker_id}
         ,#{earner_name}
         ,#{div_code}
         ,#{div_name}
         ,#{div_type}
         ,#{personal_no}
         ,#{is_native}
         ,now()<!--현재 날짜 추가-->
         ,#{bw_key}
      )
      RETURNING earner_code
   </insert>
   <!--등록된 후 code_count 증가-->
   <update id="update_count">
      UPDATE worker 
      SET code_count   = CAST(#{earner_code} AS INTEGER)
      WHERE worker_id  = #{worker_id}
   </update>
   <!--소득자 정보 업뎃-->
   <update id="earner_update">
      UPDATE earner
      SET 
         <choose>
            <when test="param_name =='deduction_amount'">
            	deduction_amount = CAST(#{param_value} AS INTEGER)
            </when>
            <when test="param_name =='ins_reduce'">
            	ins_reduce = CAST(#{param_value} AS INTEGER)
            </when>
            <when test="param_name =='sworker_reduce'">
            	sworker_reduce = CAST(#{param_value} AS INTEGER)
            </when>
             <when test="param_name =='workinjury_reduce'">
            	workinjury_reduce = CAST(#{param_value} AS INTEGER)
            </when>
            <when test="param_name =='rate_coefficient'">
            	rate_coefficient = CAST(#{param_value} AS INTEGER)
            </when>
            <otherwise>
               ${param_name} = #{param_value}
            </otherwise>
         </choose>      
      WHERE earner_code = #{earner_code}
      AND   worker_id   = #{worker_id}
   </update>
   <!--소득자 정보 삭제-->
      <delete id="earner_delete">
      DELETE FROM earner_tax
      WHERE earner_code in 
         <foreach collection="earner_codes" item="earner_code" open="(" close=")" separator="," >
            #{earner_code}
         </foreach>
      AND worker_id = #{worker_id};
         
      DELETE FROM input_task
      WHERE earner_code in 
         <foreach collection="earner_codes" item="earner_code" open="(" close=")" separator="," >
            #{earner_code}
         </foreach>
      AND worker_id = #{worker_id};

      DELETE FROM earner
      WHERE earner_code in
         <foreach collection="earner_codes" item="earner_code" open="(" close=")" separator="," >
            #{earner_code}
         </foreach>
      AND worker_id = #{worker_id};
      
      DELETE FROM work_calendar
      WHERE earner_code in
         <foreach collection="earner_codes" item="earner_code" open="(" close=")" separator="," >
            #{earner_code}
         </foreach>
      AND worker_id = #{worker_id}
   </delete>
   
</mapper>